from aiogram import Router, F
from aiogram.types import Message
from datetime import date
from utils.data_store import user_schedules, user_work_hours
from keyboards.main_menu import main_menu

schedule_router = Router()

@schedule_router.message(F.text == "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
async def cmd_show_schedule(message: Message):
    user_id = message.from_user.id
    today = date.today()

    weekends = user_schedules.get(user_id, [])
    work_hours = user_work_hours.get(user_id, [])

    upcoming = sorted(d for d in weekends if d >= today)
    weekend_text = "\n".join(map(str, upcoming)) if upcoming else "‚Äî –Ω–µ—Ç –±—É–¥—É—â–∏—Ö –≤—ã—Ö–æ–¥–Ω—ã—Ö"
    hours_text = "\n".join(t.strftime("%H:%M") for t in work_hours) if work_hours else "‚Äî –Ω–µ —É–∫–∞–∑–∞–Ω—ã"

    if today in weekends:
        status = "üìõ –°–µ–≥–æ–¥–Ω—è –≤—ã—Ö–æ–¥–Ω–æ–π ‚Äî –ø—Ä–∏—ë–º–∞ –Ω–µ—Ç."
    elif not work_hours:
        status = "‚ö†Ô∏è –ß–∞—Å—ã –ø—Ä–∏—ë–º–∞ –Ω–µ —É–∫–∞–∑–∞–Ω—ã ‚Äî –ø—Ä–∏—ë–º—ã –Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã."
    else:
        status = f"üìÜ –°–µ–≥–æ–¥–Ω—è –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –ø—Ä–∏—ë–º–æ–≤: {len(work_hours)}"

    await message.answer(
        f"üìÖ –í–∞—à–µ —Ç–µ–∫—É—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:\n\n"
        f"üîª –í—ã—Ö–æ–¥–Ω—ã–µ:\n{weekend_text}\n\n"
        f"üïí –í—Ä–µ–º—è –ø—Ä–∏—ë–º–∞:\n{hours_text}\n\n"
        f"{status}",
        reply_markup=main_menu
    )
