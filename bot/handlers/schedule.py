from aiogram import Router, F
from aiogram.types import Message
from datetime import date
from api.api_client import StrawberryAPIClient
from db.db import store  
from keyboards.main_menu import main_menu

def create_schedule_router(api_client: StrawberryAPIClient) -> Router:
    router = Router()

    @router.message(F.text == "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
    async def cmd_show_schedule(message: Message):
        user_id = message.from_user.id
        token = store.get_user_token(user_id)
        if not token:
            await message.answer("‚ùå –í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã. –í–≤–µ–¥–∏—Ç–µ /login.")
            return

        today = date.today()
        schedule = await api_client.get_schedule(token)
        if schedule is None:
            await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", reply_markup=main_menu)
            return

        weekends = [date.fromisoformat(d) for d in schedule.get("weekends", [])]
        work_hours = schedule.get("work_hours", [])

        upcoming = sorted(d for d in weekends if d >= today)
        weekend_text = "\n".join(map(str, upcoming)) if upcoming else "‚Äî –Ω–µ—Ç –±—É–¥—É—â–∏—Ö –≤—ã—Ö–æ–¥–Ω—ã—Ö"
        hours_text = "\n".join(work_hours) if work_hours else "‚Äî –Ω–µ —É–∫–∞–∑–∞–Ω—ã"

        if today in weekends:
            status = "üìõ –°–µ–≥–æ–¥–Ω—è –≤—ã—Ö–æ–¥–Ω–æ–π ‚Äî –ø—Ä–∏—ë–º–∞ –Ω–µ—Ç."
        elif not work_hours:
            status = "‚ö†Ô∏è –ß–∞—Å—ã –ø—Ä–∏—ë–º–∞ –Ω–µ —É–∫–∞–∑–∞–Ω—ã ‚Äî –ø—Ä–∏—ë–º—ã –Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã."
        else:
            status = f"üìÜ –°–µ–≥–æ–¥–Ω—è –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –ø—Ä–∏—ë–º–æ–≤: {len(work_hours)}"

        await message.answer(
            f"üìÖ –í–∞—à–µ —Ç–µ–∫—É—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:\n\n"
            f"üîª –í—ã—Ö–æ–¥–Ω—ã–µ:\n{weekend_text}\n\n"
            f"üïí –í—Ä–µ–º—è –ø—Ä–∏—ë–º–∞:\n{hours_text}\n\n"
            f"{status}",
            reply_markup=main_menu
        )

    return router