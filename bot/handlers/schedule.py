from aiogram import Router, F
from aiogram.types import Message
from api.api_client import StrawberryAPIClient
from db.db import store  
from keyboards.main_menu import main_menu
from datetime import date
from utils.utils import JWTDecoder

def create_schedule_router(api_client: StrawberryAPIClient, jwt_decoder: JWTDecoder) -> Router:
    router = Router()

    @router.message(F.text == "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
    async def cmd_show_schedule(message: Message):
        token = store.get_user_token(message.from_user.id)
        user_id = jwt_decoder.get_user_id(token)
        if not token:
            await message.answer("‚ùå –í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã. –í–≤–µ–¥–∏—Ç–µ /login.")
            return

        today_str = date.today().isoformat()
        
        schedule = await api_client.get_schedule(user_id=user_id, date=today_str, token=token)
        if schedule is None:
            await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", reply_markup=main_menu)
            return

        appointments = schedule.get("appointments") or []
        slots = schedule.get("slots") or []
        days_off = schedule.get("days_off") or []

        if today_str in days_off:
            status = "üìõ –°–µ–≥–æ–¥–Ω—è –≤—ã—Ö–æ–¥–Ω–æ–π ‚Äî –ø—Ä–∏—ë–º–∞ –Ω–µ—Ç."
        elif not slots:
            status = "‚ö†Ô∏è –°–ª–æ—Ç—ã –ø—Ä–∏—ë–º–∞ –Ω–µ —É–∫–∞–∑–∞–Ω—ã ‚Äî –ø—Ä–∏—ë–º—ã –Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã."
        else:
            status = f"üìÜ –°–µ–≥–æ–¥–Ω—è –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ —Å–ª–æ—Ç–æ–≤ –ø—Ä–∏—ë–º–∞: {len(slots)}\n" \
                     f"üìù –ó–∞–ø–∏—Å–µ–π –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: {len(appointments)}"

        slots_text = "\n".join(slots) if slots else "‚Äî"
        appointments_text = "\n".join(appointments) if appointments else "‚Äî"

        await message.answer(
            f"üìÖ –í–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n"
            f"üïí –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ—Ç—ã:\n{slots_text}\n\n"
            f"üìã –ó–∞–ø–∏—Å–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n{appointments_text}\n\n"
            f"{status}",
            reply_markup=main_menu
        )

    return router
