version: "3.9"

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-mydb}
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"       
      - "15672:15672"    
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS:-guest}
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrator:
    build: .
    command: ["./migr", "up"]
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: ${DB_HOST:-db}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT:-5432}
      DB_SSLMODE: ${DB_SSLMODE:-disable}

  app:
    build: .
    depends_on:
      db:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy
    ports:
      - "${REST_PORT:-8080}:${REST_PORT:-8080}"
    environment:
      REST_PORT: ${REST_PORT:-8080}
      DB_HOST: ${DB_HOST:-db}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT:-5432}
      DB_SSLMODE: ${DB_SSLMODE:-disable}
      SECRET_KEY: ${SECRET_KEY}
      TTL: ${TTL}
      RABBITMQ_URL: amqp://${RABBITMQ_USER:-guest}:${RABBITMQ_PASS:-guest}@rabbitmq:5672/
